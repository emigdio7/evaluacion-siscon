openapi: "3.0.1"
info:
  title: "API EMPLOYEES"
  version: "1.0.0"
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: Employees
    description: Management Employees
paths:
  /employee/update/{id}:
    put:
      tags:
        - Employees
      summary: Update employee
      description: Update employee in the database
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Request-ID
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDTO'
        required: true
      responses:
        '200':
          description: Update Employee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDTO'
        '404':
          description: Employee not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseDTO'
  /employee/save:
    post:
      tags:
        - Employees
      summary: Save employees
      description: Save employees in the database
      operationId: save
      parameters:
        - name: X-Request-ID
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeListDTO'
        required: true
      responses:
        '200':
          description: Save Employees
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseDTO'
  /employee:
    get:
      tags:
        - Employees
      summary: Get all employees
      description: Return a list of employees
      operationId: getAll
      parameters:
        - name: X-Request-ID
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List Employees
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseDTO'
  /employee/delete/{id}:
    delete:
      tags:
        - Employees
      summary: Delete employee
      description: Delete employee in the database
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: X-Request-ID
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Employee Deleted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseDTO'
        '404':
          description: Employee not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseDTO'
components:
  schemas:
    EmployeeDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        secondName:
          type: string
        paternalLastName:
          type: string
        maternalSurname:
          type: string
        age:
          type: integer
          format: int32
        gender:
          type: string
        birthdate:
          type: string
          format: date
        position:
          type: string
      required:
        - age
        - birthdate
        - firstName
        - gender
        - maternalSurname
        - paternalLastName
        - position
    ResponseDTO:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        responseData:
          type: object
    EmployeeListDTO:
      type: object
      properties:
        employees:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDTO'
      required:
        - employees
